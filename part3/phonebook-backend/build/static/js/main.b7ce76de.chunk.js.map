{"version":3,"sources":["components/PersonForm.js","components/Filter.js","components/Person.js","components/Notification.js","services/persons.js","App.js","index.js"],"names":["PersonForm","props","newName","newNumber","handleNameChange","handleNumberChange","handleSubmit","onSubmit","onChange","value","required","type","Filter","searchVal","handleSearchValChange","Person","person","handleDelete","name","number","id","onClick","e","Notification","message","className","baseUrl","personService","getAll","axios","get","then","response","data","create","newObject","post","update","put","remove","delete","App","useState","persons","setPersons","setNewName","setNewNumber","setSearchVal","setMessage","useEffect","initialPersons","filterdNames","filter","toLowerCase","includes","event","target","changedPerson","window","confirm","catch","error","setTimeout","preventDefault","find","changedObject","returnedPerson","map","updatePerson","returnedPersons","concat","createPerson","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b7ce76de.chunk.js","sourcesContent":["import React from 'react';\n\nconst PersonForm = (props) => {\n\tconst {\n\t\tnewName,\n\t\tnewNumber,\n\t\thandleNameChange,\n\t\thandleNumberChange,\n\t\thandleSubmit,\n\t} = props;\n\n\treturn (\n\t\t<form onSubmit={handleSubmit}>\n\t\t\t<div>\n\t\t\t\tname: <input onChange={handleNameChange} value={newName} required />\n\t\t\t</div>\n\t\t\t<div>\n\t\t\t\tnumber:{' '}\n\t\t\t\t<input onChange={handleNumberChange} value={newNumber} required />\n\t\t\t</div>\n\t\t\t<div>\n\t\t\t\t<button type=\"submit\">add</button>\n\t\t\t</div>\n\t\t</form>\n\t);\n};\n\nexport default PersonForm;\n","import React from 'react';\n\nconst Filter = ({ searchVal, handleSearchValChange }) => {\n\treturn (\n\t\t<label>\n\t\t\tfilter shown with:{' '}\n\t\t\t<input onChange={handleSearchValChange} value={searchVal} />\n\t\t</label>\n\t);\n};\n\nexport default Filter;\n","import React from 'react';\n\nconst Person = ({ person, handleDelete }) => (\n\t<div>\n\t\t{person.name} {person.number}{' '}\n\t\t<button\n\t\t\tid={person.id}\n\t\t\tonClick={(e) => handleDelete(e, person.id, person.name)}\n\t\t>\n\t\t\tdelete\n\t\t</button>\n\t</div>\n);\n\nexport default Person;\n","import React from 'react';\n\nconst Notification = ({ message }) => {\n\tif (message === null) {\n\t\treturn null;\n\t}\n\treturn <div className=\"message\">{message}</div>;\n};\n\nexport default Notification;\n","import axios from 'axios';\n\nconst baseUrl = '/api/persons';\n\nconst getAll = () => {\n\tconst request = axios.get(baseUrl);\n\treturn request.then((response) => response.data);\n};\n\nconst create = (newObject) => {\n\tconst request = axios.post(baseUrl, newObject);\n\treturn request.then((response) => response.data);\n};\n\nconst update = (id, newObject) => {\n\tconst request = axios.put(`${baseUrl}/${id}`, newObject);\n\treturn request.then((response) => response.data);\n};\n\nconst remove = (id) => {\n\treturn axios.delete(`${baseUrl}/${id}`);\n};\n\nconst personService = { getAll, create, update, remove };\n\nexport default personService;\n","import React, { useEffect, useState } from 'react';\nimport PersonForm from './components/PersonForm';\nimport Filter from './components/Filter';\nimport Person from './components/Person';\nimport Notification from './components/Notification';\nimport personService from './services/persons';\n\nconst App = () => {\n\tconst [persons, setPersons] = useState([]);\n\tconst [newName, setNewName] = useState('');\n\tconst [newNumber, setNewNumber] = useState('');\n\tconst [searchVal, setSearchVal] = useState('');\n\tconst [message, setMessage] = useState(null);\n\n\tuseEffect(() => {\n\t\tpersonService.getAll().then((initialPersons) => {\n\t\t\tsetPersons(initialPersons);\n\t\t});\n\t}, []);\n\n\tconst handleNameChange = (event) => {\n\t\tsetNewName(event.target.value);\n\t};\n\n\tconst handleNumberChange = (event) => {\n\t\tsetNewNumber(event.target.value);\n\t};\n\n\tconst handleSearchValChange = (event) => {\n\t\tsetSearchVal(event.target.value);\n\t};\n\n\tconst filterdNames = persons.filter((person) => {\n\t\treturn person.name.toLowerCase().includes(searchVal.toLowerCase());\n\t});\n\n\tconst updatePerson = (id) => {\n\t\tlet changedObject = { name: newName, number: newNumber };\n\t\tpersonService\n\t\t\t.update(id, changedObject)\n\t\t\t.then((returnedPerson) => {\n\t\t\t\tsetPersons(\n\t\t\t\t\tpersons.map((person) => (person.id === id ? returnedPerson : person))\n\t\t\t\t);\n\t\t\t\tsetMessage(`Updated ${newName}`);\n\t\t\t\tsetTimeout(() => setMessage(null), 3000);\n\t\t\t})\n\t\t\t.catch((error) => {\n\t\t\t\tsetMessage(error.response.data.error);\n\t\t\t\tsetTimeout(() => setMessage(null), 3000);\n\t\t\t});\n\t};\n\n\tconst createPerson = () => {\n\t\tlet changedObject = { name: newName, number: newNumber };\n\t\tpersonService\n\t\t\t.create(changedObject)\n\t\t\t.then((returnedPersons) => {\n\t\t\t\tsetPersons(persons.concat(returnedPersons));\n\t\t\t\tsetMessage(`Added ${newName}`);\n\t\t\t\tsetTimeout(() => setMessage(null), 3000);\n\t\t})\n\t\t\t.catch(error => {\n\t\t\t\tsetMessage(error.response.data.error)\n\t\t\t\tsetTimeout(() => setMessage(null), 3000);\n\t\t\t})\n\t};\n\n\tconst handleSubmit = (event) => {\n\t\tevent.preventDefault();\n\t\tconst person = persons.find((person) => newName === person.name);\n\n\t\tif (person) {\n\t\t\twindow.confirm(\n\t\t\t\t`${newName} is already added to phonebook, replace the old number with a new one?`\n\t\t\t) && updatePerson(person.id);\n\t\t} else if (!person) {\n\t\t\tcreatePerson();\n\t\t}\n\n\t\tsetNewName('');\n\t\tsetNewNumber('');\n\t};\n\n\tconst handleDelete = (event, id, name) => {\n\t\tif (event.target.id === id) {\n\t\t\tconst changedPerson = persons.filter((person) => id !== person.id);\n\t\t\tconst confirmDeletion = window.confirm(`Delete ${name} ?`);\n\n\t\t\tif (confirmDeletion) {\n\t\t\t\tpersonService.remove(id).catch((error) => {\n\t\t\t\t\tsetMessage(\n\t\t\t\t\t\t`Information of ${name} has already been removed from server`\n\t\t\t\t\t);\n\t\t\t\t\tsetTimeout(() => setMessage(null), 3000);\n\t\t\t\t});\n\t\t\t\tsetPersons(changedPerson);\n\t\t\t\tsetMessage(`Deleted ${name}`);\n\t\t\t\tsetTimeout(() => setMessage(null), 3000);\n\t\t\t}\n\t\t}\n\t};\n\n\treturn (\n\t\t<div>\n\t\t\t<h2>Phonebook</h2>\n\t\t\t<Notification message={message} />\n\t\t\t<Filter\n\t\t\t\tsearchVal={searchVal}\n\t\t\t\thandleSearchValChange={handleSearchValChange}\n\t\t\t/>\n\n\t\t\t<h2>add a new</h2>\n\t\t\t<PersonForm\n\t\t\t\tnewName={newName}\n\t\t\t\tnewNumber={newNumber}\n\t\t\t\thandleNumberChange={handleNumberChange}\n\t\t\t\thandleNameChange={handleNameChange}\n\t\t\t\thandleSubmit={handleSubmit}\n\t\t\t/>\n\n\t\t\t<h2>Numbers</h2>\n\t\t\t{filterdNames.map((person) => {\n\t\t\t\treturn (\n\t\t\t\t\t<Person\n\t\t\t\t\t\tkey={person.name}\n\t\t\t\t\t\tperson={person}\n\t\t\t\t\t\thandleDelete={handleDelete}\n\t\t\t\t\t/>\n\t\t\t\t);\n\t\t\t})}\n\t\t</div>\n\t);\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}